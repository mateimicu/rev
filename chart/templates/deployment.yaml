apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.deployment.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.deployment.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          imagePullPolicy: Always # usually not required in production, but for this local setup it is required
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.containerProbes.liveness.path }}
              port: {{ .Values.httpPort }}
          readinessProbe:
            httpGet:
              path: {{ .Values.containerProbes.readiness.path }}
              port: {{ .Values.httpPort }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: PORT
              value: "{{ .Values.httpPort }}"
            - name: REDIS_HOST
              value: "{{ .Release.name }}-redis-master"
